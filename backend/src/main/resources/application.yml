spring:
  application:
    name: genai_demo
  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVERS}
    properties:
      "[sasl.mechanism]": "PLAIN"
      "[sasl.jaas.config]": "org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_KEY_ID}' password='${KAFKA_KEY_SECRET}';"
      "[schema.registry.url]": ${SCHEMA_REGISTRY_URL}
      "[basic.auth.credentials.source]": "USER_INFO"
      "[basic.auth.user.info]": "${SCHEMA_REGISTRY_KEY_ID}:${SCHEMA_REGISTRY_KEY_SECRET}"
      "[auto.register.schemas]": true
      "[client.dns.lookup]": "use_all_dns_ips"
      "[security.protocol]": "SASL_SSL"
    producer:
      client-id: "genai_demo-producer"
      compression-type: "zstd"
      key-serializer: "io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer"
      value-serializer: "io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer"
    consumer:
      group-id: "genai_demo-consumer"
      auto-offset-reset: "earliest"
      key-deserializer: "io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer"
      value-deserializer: "io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer"
      properties:
        "[json.key.type]": "io.confluent.genai_demo.model.ChatOutputKey"
        "[json.value.type]": "io.confluent.genai_demo.model.ChatOutput"